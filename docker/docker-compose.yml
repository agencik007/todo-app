version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: todo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: todo_user
      POSTGRES_PASSWORD: todo_password
      POSTGRES_DB: todo_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo_user -d todo_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # FastAPI Backend
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: todo-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://todo_user:todo_password@db:5432/todo_db
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
      - /app/venv  # Don't mount virtual environment
    depends_on:
      db:
        condition: service_healthy
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s = socket.socket(); s.connect(('localhost', 8000)); s.close()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Angular Frontend
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: todo-frontend
    restart: unless-stopped
    ports:
      - "4200:4200"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # PgAdmin - Database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: todo-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - todo-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  todo-network:
    driver: bridge
